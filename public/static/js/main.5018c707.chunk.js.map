{"version":3,"sources":["Components/Navigation/Navigation.jsx","Components/Loading/Loading.jsx","Components/Icons/Icons.jsx","Components/Cart/Cart.jsx","config/config.default.js","Components/BookListing/BookListing.jsx","Components/Error/Error.jsx","Components/BookDetail/BookDetail.jsx","Components/AddBook/AddBook.jsx","routes.jsx","App.jsx","serviceWorker.js","index.js"],"names":["DrawerIcon","xmlns","width","height","viewBox","d","Navigation","context","useContext","AppContext","toggleDrawer","isDrawerOpened","getNavBarWrapperClass","classNames","className","href","onClick","Loading","props","defaultText","alternativeText","loading","AddSVG","DeleteSVG","Cart","cart","removeItemFromCart","totalPrice","length","map","book","index","price","key","id","title","toFixed","process","BookListing","books","addItemToCart","to","src","image","alt","Error","BookDetail","params","useParams","history","useHistory","console","log","useState","setBook","setLoading","useEffect","axios","get","config","then","response","data","catch","e","error","finally","goBack","description","AddBook","isbn","subtitle","author","published","publisher","pages","website","newBook","setNewBook","errors","setErrors","handleChange","target","name","files","value","onSubmit","event","preventDefault","formData","FormData","append","post","headers","window","location","err","htmlFor","onChange","type","required","Object","keys","path","exact","render","React","createContext","App","setBooks","updateCart","setIsDrawerOpen","getGeneratedClass","defaultClass","push","join","Provider","copiedCart","splice","routes","Boolean","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"uaAKMA,EACF,yBACIC,MAAM,6BACNC,MAAM,KACNC,OAAO,KACPC,QAAQ,aACR,0BAAMC,EAAE,uUAyCDC,EArCI,WAGf,IAAMC,EAAUC,qBAAWC,GAEpBC,EAAgCH,EAAhCG,aAAcC,EAAkBJ,EAAlBI,eAYfC,EAAwBC,IAAW,CACrC,oBAAoB,EACpB,gBAAiBF,EACjB,iBAAkBA,IAGtB,OACI,yBAAKG,UAAWF,GACZ,yBAAKE,UAAU,WACX,uBAAGC,KAAK,KAAR,aACA,4BACIC,QAAS,kBAAMN,KACfI,UAAU,eACTd,MCtBNiB,G,MAnBC,SAACC,GACb,IAAIC,EAAc,wCAIlB,OAHID,EAAME,kBACND,EAAcD,EAAME,iBAGpBF,EAAMG,SACF,yBAAKP,UAAU,mBACX,2BAAIK,MCVPG,EAAS,kBAClB,yBACIrB,MAAM,6BACNC,MAAM,KACNC,OAAO,KACPC,QAAQ,aACR,0BAAMC,EAAE,0CAIHkB,EAAY,kBACrB,yBACItB,MAAM,6BACNC,MAAM,KACNC,OAAO,KACPC,QAAQ,aACR,0BAAMC,EAAE,oFCmCDmB,G,MA9CF,SAACN,GAEV,IAAMX,EAAUC,qBAAWC,GAEnBgB,EAA6BlB,EAA7BkB,KAAMC,EAAuBnB,EAAvBmB,mBAEVC,EAAa,EAEjB,OAAO,yBAAKb,UAAU,gBAClB,wBAAIA,UAAU,iBAAd,aAIA,6BAEA,wBAAIA,UAAU,aAETW,IAASA,EAAKG,QAAU,4BAAI,uEAE5BH,GAAQA,EAAKG,OAASH,EAAKI,KAAI,SAACC,EAAMC,GAEnC,OADAJ,GAAcG,EAAKE,MACZ,wBAAIC,IAAKH,EAAKI,GAAK,IAAMH,EAAOjB,UAAU,kBAC7C,2BAAIgB,EAAKK,MAAT,MAAkB,gCAASL,EAAKE,MAAd,YAClB,4BAAQhB,QAAS,kBAAMU,EAAmBK,KACtC,kBAAC,EAAD,WAGP,MAGT,yBAAKjB,UAAU,eACX,wCAEA,8BAAOa,EAAWS,QAAQ,GAA1B,gB,iBCxCG,EACFC,yB,OCyCEC,G,MApCK,WAEhB,IAAM/B,EAAUC,qBAAWC,GAEnB8B,EAAuDhC,EAAvDgC,MAAO7B,EAAgDH,EAAhDG,aAAc8B,EAAkCjC,EAAlCiC,cAAe7B,EAAmBJ,EAAnBI,eAE5C,OAAK4B,GAAUA,EAAMX,OAEP,oCACV,yDACA,wBAAId,UAAU,sBAENyB,EAAMV,KAAI,SAACC,EAAMC,GAAP,OACN,wBAAIjB,UAAU,0BAA0BmB,IAAKH,EAAKI,IAC9C,2BAAIJ,EAAKK,OAET,kBAAC,IAAD,CAAMM,GAAI,YAAcX,EAAKI,IACzB,yBAAKQ,IAAKZ,EAAKa,MAAOC,IAAKd,EAAKK,SAGpC,4BACIrB,UAAU,cACVE,QAAS,WACLwB,EAAcV,GACTnB,GACDD,MAGR,kBAAC,EAAD,aArBb,oCCRAmC,EAJD,WACZ,MAAO,aCqDMC,G,MA9CI,WACf,IAAMC,EAASC,cACTC,EAAUC,cAEhBC,QAAQC,IAAIL,GAJS,MAMGM,qBANH,mBAMdvB,EANc,KAMRwB,EANQ,OAOSD,oBAAS,GAPlB,mBAOdhC,EAPc,KAOLkC,EAPK,KAmBrB,OAVAC,qBAAU,WACNC,IAAMC,IAAIC,EAAiB,aAAeZ,EAAOb,IAC5C0B,MAAK,SAACC,GACH,IAAM/B,EAAO+B,EAASC,KACtBR,EAAQxB,MAEXiC,OAAM,SAACC,GAAD,OAAOb,QAAQc,MAAMD,MAC3BE,SAAQ,kBAAMX,GAAW,QAC/B,CAACR,EAAOb,KAEPb,EAEI,kBAAC,EAAD,CACIA,QAASA,EACTD,gBAAiB,2CAMzB,yBAAKN,UAAU,eACX,yBAAKA,UAAU,sBACX,4BAAQE,QAAS,kBAAMiC,EAAQkB,WAA/B,QACA,4BAAKrC,EAAKK,QAEd,2BAAIL,EAAKsC,gB,ulBCjCrB,IAyJeC,EAzJC,WAAO,IAAD,EAEYhB,mBAAS,CACnCiB,KAAM,GACNnC,MAAO,GACPoC,SAAU,GACVC,OAAQ,GACRC,UAAW,GACXC,UAAW,GACXC,MAAO,GACPP,YAAa,GACbzB,MAAO,GACPX,MAAO,GACP4C,QAAS,KAbK,mBAEXC,EAFW,KAEFC,EAFE,OAgBUzB,mBAAS,MAhBnB,mBAgBX0B,EAhBW,KAgBHC,EAhBG,OAiBY3B,oBAAS,GAjBrB,mBAiBXhC,EAjBW,KAiBFkC,EAjBE,KAmBFL,cAEhB,SAAS+B,EAAajB,GAElB,IAAM/B,EAAM+B,EAAEkB,OAAOC,KAGjBL,EAAW,EAAD,GACHD,EAFC,UAAR5C,EACU,eAELA,EAAM+B,EAAEkB,OAAOE,MAAM,IAIhB,eAELnD,EAAM+B,EAAEkB,OAAOG,SA0C5B,OAFAlC,QAAQC,IAAIyB,GAEL,yBAAK/D,UAAU,oBAClB,kBAAC,EAAD,CAASO,QAASA,IAClB,sDACA,6BACA,0BAAMiE,SAvCV,SAAsBC,GAClBhC,GAAW,GACXyB,EAAU,MAEVO,EAAMC,iBAEN,IAMIC,EAAW,IAAIC,SACnB,IAAM,IAAIzD,KAAO4C,EACbY,EAASE,OAAO1D,EAAK4C,EAAQ5C,IAGjCwB,IAAMmC,KAAKjC,EAAiB,mBAAoB8B,EAX5B,CAChBI,QAAS,CACL,eAAgB,uCAUnBjC,MAAK,SAAAC,GAEHiC,OAAOC,SAAShF,KAAO,OAEzBgD,OAAM,SAAAiC,GAEAA,EAAInC,SAASC,MAAQkC,EAAInC,SAASC,KAAKiB,QACtCC,EAAUgB,EAAInC,SAASC,KAAKiB,WAGnCb,SAAQ,kBAAMX,GAAW,MAE9BJ,QAAQC,IAAIyB,KAUR,kCACI,6BACI,2BAAOoB,QAAQ,QAAf,QACA,2BAAOC,SAAUjB,EAAc/C,GAAG,OAAOiD,KAAK,OAAOgB,KAAK,SAASd,MAAOR,EAAQP,MAAQ,GAAI8B,UAAQ,KAE1G,6BACI,2BAAOH,QAAQ,SAAf,SACA,2BAAOC,SAAUjB,EAAcmB,UAAQ,EAAClE,GAAG,QAAQiD,KAAK,QAAQgB,KAAK,OAAOd,MAAOR,EAAQ1C,UAGnG,kCACI,6BACI,2BAAO8D,QAAQ,YAAf,YACA,2BAAOC,SAAUjB,EAAcmB,UAAQ,EAAClE,GAAG,WAAWiD,KAAK,WAAWgB,KAAK,OAAOd,MAAOR,EAAQN,YAErG,6BACI,2BAAO0B,QAAQ,UAAf,UACA,2BAAOC,SAAUjB,EAAcmB,UAAQ,EAAClE,GAAG,SAASiD,KAAK,SAASgB,KAAK,OAAOd,MAAOR,EAAQL,WAGrG,kCACI,6BACI,2BAAOyB,QAAQ,aAAf,aACA,2BAAOC,SAAUjB,EAAcmB,UAAQ,EAAClE,GAAG,YAAYiD,KAAK,YAAYgB,KAAK,iBAAiBd,MAAOR,EAAQJ,aAEjH,6BACI,2BAAOwB,QAAQ,aAAf,aACA,2BAAOC,SAAUjB,EAAcmB,UAAQ,EAAClE,GAAG,YAAYiD,KAAK,YAAYgB,KAAK,OAAOd,MAAOR,EAAQH,cAG3G,kCACI,6BACI,2BAAOuB,QAAQ,SAAf,SACA,2BAAOC,SAAUjB,EAAcmB,UAAQ,EAAClE,GAAG,QAAQiD,KAAK,QAAQgB,KAAK,SAASd,MAAOR,EAAQF,SAEjG,6BACI,2BAAOsB,QAAQ,eAAf,eACA,8BAAUC,SAAUjB,EAAcmB,UAAQ,EAAClE,GAAG,cAAciD,KAAK,cAAcE,MAAOR,EAAQT,gBAGtG,kCACI,6BACI,2BAAO6B,QAAQ,SAAf,SACA,2BAAOC,SAAUjB,EAAcmB,UAAQ,EAAClE,GAAG,QAAQiD,KAAK,QAAQgB,KAAK,SAASd,MAAOR,EAAQ7C,SAEjG,6BACI,2BAAOiE,QAAQ,WAAf,WACA,2BAAOC,SAAUjB,EAAcmB,UAAQ,EAAClE,GAAG,UAAUiD,KAAK,UAAUgB,KAAK,MAAMd,MAAOR,EAAQD,YAGtG,kCACI,6BACI,2BAAOqB,QAAQ,SAAf,SACA,2BAAOE,KAAK,OAAOD,SAAUjB,EAAcmB,UAAQ,EAAClE,GAAG,QAAQiD,KAAK,YAG5E,6BACI,4BAAQgB,KAAK,UAAb,mBAGJ,4BACKpB,GAAUsB,OAAOC,KAAKvB,GAAQlD,KAAI,SAAAI,GAC/B,OAAO,wBAAIA,IAAKA,GACX8C,EAAO9C,GAAKJ,KAAI,SAAAoC,GAAK,OAAI,uBAAGhC,IAAKgC,GAAQA,cCnJnD,oBAAC,IAAD,KACX,kBAAC,IAAD,CAAOsC,KAAK,IAAIC,OAAK,EAACC,OAAQ,SAACvF,GAC3B,OAAO,kBAAC,EAAgBA,MAFjB,MAIX,kBAAC,IAAD,CAAOqF,KAAK,eAAeC,OAAK,EAACC,OAAQ,SAACvF,GACtC,OAAO,kBAAC,EAAeA,MALhB,MAOX,kBAAC,IAAD,CAAOqF,KAAK,iBAAiBC,OAAK,EAACC,OAAQ,SAACvF,GACxC,OAAO,kBAAC,EAAYA,MARb,MAUX,kBAAC,IAAD,CAAOqF,KAAK,IAAIE,OAAQ,SAACvF,GAAD,OAAW,kBAAC,EAAUA,OCTrCT,EAAaiG,IAAMC,cAAc,IAuF/BC,EAnFH,WAAO,IAAD,EACYvD,mBAAS,IADrB,mBACPd,EADO,KACAsE,EADA,OAEgBxD,oBAAS,GAFzB,mBAEPhC,EAFO,KAEEkC,EAFF,OAGaF,mBAAS,IAHtB,mBAGP5B,EAHO,KAGDqF,EAHC,OAI4BzD,oBAAS,GAJrC,mBAIP1C,EAJO,KAISoG,EAJT,KAMdvD,qBAAU,WACNC,IAAMC,IAAIC,EAAiB,cACtBC,MAAK,SAACC,GACH,IAAMtB,EAAQsB,EAASC,KACvB+C,EAAStE,MAEZwB,OAAM,SAACC,GAAD,OAAOb,QAAQc,MAAMD,MAC3BE,SAAQ,WACLX,GAAW,QAEpB,IAEH,IAqBMyD,EAAoB,SAAAC,GACtB,IAAMnG,EAAY,CAACmG,GAQnB,OANItG,EACAG,EAAUoG,KAAK,iBAEfpG,EAAUoG,KAAK,iBAGZpG,EAAUqG,KAAK,MAG1B,OAAO,6BAEH,kBAAC1G,EAAW2G,SAAZ,CAAqB/B,MAAO,CAGxB1E,iBACA4B,QACAd,KAAMA,EACNe,cAzCc,SAACV,GACnBgF,EAAW,GAAD,mBAAKrF,GAAL,CAAWK,MAyCjBJ,mBAtCmB,SAACK,GAGxB,IAAMsF,EAAU,YAAO5F,GAGvB4F,EAAWC,OAAOvF,EAAO,GAGzB+E,EAAWO,IA8BP3G,aA1Ba,WACjBqG,GAAiBpG,MA4Bb,kBAAC,EAAD,MAEA,kBAAC,EAAD,CAASU,QAASA,IAElB,yBAAKP,UAAWkG,EAAkB,iBAC9B,yBAAKlG,UAAU,oBACX,yBAAKA,UAAU,oBACTO,GAAWkG,KAIzB,yBAAKzG,UAAWkG,EAAkB,mBAC9B,kBAAC,EAAD,UC5EIQ,QACW,cAA7B1B,OAAOC,SAAS0B,UAEe,UAA7B3B,OAAOC,SAAS0B,UAEhB3B,OAAOC,SAAS0B,SAASC,MACvB,2DCVNC,IAASlB,OACL,kBAAC,IAAD,KACI,kBAAC,EAAD,OAEFmB,SAASC,eAAe,SDuHxB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMpE,MAAK,SAAAqE,GACjCA,EAAaC,kB","file":"static/js/main.5018c707.chunk.js","sourcesContent":["import React, {useContext} from \"react\";\nimport \"./Navigation.scss\";\nimport classNames from \"classnames\";\nimport { AppContext } from '../../App';\n\nconst DrawerIcon = (\n    <svg\n        xmlns='http://www.w3.org/2000/svg'\n        width='24'\n        height='24'\n        viewBox='0 0 24 24'>\n        <path d='M7 18c-1.1 0-1.99.9-1.99 2S5.9 22 7 22s2-.9 2-2-.9-2-2-2zM1 2v2h2l3.6 7.59-1.35 2.45c-.16.28-.25.61-.25.96 0 1.1.9 2 2 2h12v-2H7.42c-.14 0-.25-.11-.25-.25l.03-.12.9-1.63h7.45c.75 0 1.41-.41 1.75-1.03l3.58-6.49c.08-.14.12-.31.12-.48 0-.55-.45-1-1-1H5.21l-.94-2H1zm16 16c-1.1 0-1.99.9-1.99 2s.89 2 1.99 2 2-.9 2-2-.9-2-2-2z' />\n    </svg>\n);\n\nconst Navigation = () => {\n\n    // ContextConsumer\n    const context = useContext(AppContext);\n\n    const {toggleDrawer, isDrawerOpened} = context;\n\n    // const getNavBarWrapperClass = () => {\n    //     const className = [\"nav-bar-wrapper\"];\n    //     if (isDrawerOpened) {\n    //         className.push(\"drawer-opened\");\n    //     } else {\n    //         className.push(\"drawer-closed\");\n    //     }\n    //     return className.join(\" \");\n    // };\n\n    const getNavBarWrapperClass = classNames({\n        \"nav-bar-wrapper \": true,\n        \"drawer-opened\": isDrawerOpened,\n        \"drawer-closed\": !isDrawerOpened,\n    });\n\n    return (\n        <div className={getNavBarWrapperClass}>\n            <nav className='nav-bar'>\n                <a href=\"/\">Reactshop</a>\n                <button\n                    onClick={() => toggleDrawer()}\n                    className='cart-button'>\n                    {DrawerIcon}\n                </button>\n            </nav>\n        </div>\n    );\n};\n\nexport default Navigation;\n","import React from \"react\";\nimport \"./Loading.scss\";\nimport PropTypes from \"prop-types\";\n\nconst Loading = (props) => {\n    let defaultText = \"Die Bücher-Liste lädt gerade...\";\n    if (props.alternativeText) {\n        defaultText = props.alternativeText;\n    }\n    return (\n        props.loading && (\n            <div className='loading-wrapper'>\n                <p>{defaultText}</p>\n            </div>\n        )\n    );\n};\n\nLoading.propTypes = {\n    loading: PropTypes.bool.isRequired,\n    alternativeText: PropTypes.string,\n};\n\nexport default Loading;\n","import React from \"react\";\n\nexport const AddSVG = () => (\n    <svg\n        xmlns='http://www.w3.org/2000/svg'\n        width='24'\n        height='24'\n        viewBox='0 0 24 24'>\n        <path d='M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z' />\n    </svg>\n);\n\nexport const DeleteSVG = () => (\n    <svg\n        xmlns='http://www.w3.org/2000/svg'\n        width='24'\n        height='24'\n        viewBox='0 0 24 24'>\n        <path d='M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z' />\n    </svg>\n);\n","import React, { useContext } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { DeleteSVG } from '../Icons/Icons';\nimport { AppContext } from '../../App';\n\nimport \"./Cart.scss\";\n\nconst Cart = (props) => {\n\n    const context = useContext(AppContext)\n\n    const { cart, removeItemFromCart } = context;\n\n    let totalPrice = 0;\n\n    return <div className=\"cart-wrapper\">\n        <h2 className=\"cart-headline\">\n            Warenkorb\n        </h2>\n\n        <hr />\n\n        <ul className=\"cart-list\">\n\n            {cart && !cart.length && <li><p>Aktuell gibt es keine Items im Warekorb</p></li>}\n\n            {cart && cart.length ? cart.map((book, index) => {\n                totalPrice += book.price;\n                return <li key={book.id + \" \" + index} className=\"cart-list-item\">\n                    <p>{book.title} - <strong>{book.price} €</strong></p>\n                    <button onClick={() => removeItemFromCart(index)}>\n                        <DeleteSVG />\n                    </button>\n                </li>\n            }) : null}\n\n        </ul>\n        <div className=\"cart-footer\">\n            <span>Preis:</span>\n\n            <span>{totalPrice.toFixed(2)} € </span>\n        </div>\n    </div>;\n};\n\nCart.propTypes = {\n    cart: PropTypes.array,\n    removeItemFromCart: PropTypes.func\n};\n\n\n\n\nexport default Cart;\n","export default {\n    API_URL: process.env.REACT_APP_APP_URL || \"\"\n}","import React, { useContext } from \"react\";\nimport { AddSVG } from \"../Icons/Icons.jsx\";\nimport \"./BookListing.scss\"\nimport { Link } from 'react-router-dom';\nimport { AppContext } from '../../App.jsx';\n\nconst BookListing = () => {\n\n    const context = useContext(AppContext);\n\n    const { books, toggleDrawer, addItemToCart, isDrawerOpened } = context;\n\n    if (!books || !books.length) {\n        return \"Aktuell gibt es keine Bücher\"\n    } else return <>\n        <h1>Bestseller Bücher 2020</h1>\n        <ul className=\"book-overview-list\">\n            {\n                books.map((book, index) =>\n                    <li className=\"book-overview-list-item\" key={book.id}>\n                        <p>{book.title}</p>\n\n                        <Link to={\"/details/\" + book.id}>\n                            <img src={book.image} alt={book.title} />\n                        </Link>\n\n                        <button\n                            className=\"cart-button\"\n                            onClick={() => {\n                                addItemToCart(book);\n                                if (!isDrawerOpened) {\n                                    toggleDrawer();\n                                }\n                            }}>\n                            <AddSVG />\n                        </button>\n                    </li>\n                )\n            }\n        </ul>\n    </>\n};\nexport default BookListing;\n\n\n","\nconst Error = () => {\n  return \"Error 404\";\n};\n\nexport default Error;\n\n","import React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport Loading from \"../Loading/Loading\";\nimport axios from \"axios\";\nimport config from \"./../../config/config.default\";\n\nimport \"./BookDetail.scss\";\n\nconst BookDetail = () => {\n    const params = useParams();\n    const history = useHistory();\n\n    console.log(params);\n\n    const [book, setBook] = useState();\n    const [loading, setLoading] = useState(true);\n\n    useEffect(() => {\n        axios.get(config.API_URL + \"/api/book/\" + params.id)\n            .then((response) => {\n                const book = response.data;\n                setBook(book);\n            })\n            .catch((e) => console.error(e))\n            .finally(() => setLoading(false));\n    }, [params.id]);\n\n    if (loading) {\n        return (\n            <Loading\n                loading={loading}\n                alternativeText={\"Das ausgewählte Buch lädt gerade\"}\n            />\n        );\n    }\n\n    return (\n        <div className=\"book-detail\">\n            <div className='book-detail-header'>\n                <button onClick={() => history.goBack()}>Back</button>\n                <h1>{book.title}</h1>\n            </div>\n            <p>{book.description}</p>\n        </div>\n    );\n};\n\nBookDetail.propTypes = {\n    books: PropTypes.array,\n    addItemToCart: PropTypes.func,\n    isDrawerOpened: PropTypes.bool,\n    toggleDrawer: PropTypes.func,\n};\n\nexport default BookDetail;\n","import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport config from \"./../../config/config.default\";\nimport Loading from \"./../Loading/Loading\";\n\n\n\nimport \"./AddBook.scss\";\nimport { useHistory } from 'react-router-dom';\n\nconst AddBook = () => {\n\n    const [newBook, setNewBook] = useState({\n        isbn: \"\",\n        title: \"\",\n        subtitle: \"\",\n        author: \"\",\n        published: \"\",\n        publisher: \"\",\n        pages: \"\",\n        description: \"\",\n        image: \"\",\n        price: \"\",\n        website: \"\"\n    });\n\n    const [errors, setErrors] = useState(null);\n    const [loading, setLoading] = useState(false);\n\n    const history = useHistory()\n\n    function handleChange(e) {\n\n        const key = e.target.name;\n\n        if (key === \"image\") {\n            setNewBook({\n                ...newBook,\n                [key]: e.target.files[0]\n            });\n\n        } else {\n            setNewBook({\n                ...newBook,\n                [key]: e.target.value\n            });\n        }\n\n    }\n\n\n    function handleSubmit(event) {\n        setLoading(true);\n        setErrors(null);\n\n        event.preventDefault();\n\n        const axiosConfig = {\n            headers: {\n                'content-type': 'application/x-www-form-urlencoded'\n            }\n        }\n\n        let formData = new FormData();\n        for ( var key in newBook ) {\n            formData.append(key, newBook[key]);\n        }\n\n        axios.post(config.API_URL + \"/api/book/create\", formData, axiosConfig)\n            .then(response => {\n\n               window.location.href = \"/\";\n            })\n            .catch(err => {\n               \n                if(err.response.data && err.response.data.errors){\n                    setErrors(err.response.data.errors)\n                }\n            })\n            .finally(() => setLoading(false))\n\n        console.log(newBook);\n    }\n\n    console.log(newBook);\n\n    return <div className=\"add-form-wrapper\">\n        <Loading loading={loading}/>\n        <h1> Neues Buch erstellen </h1>\n        <hr />\n        <form onSubmit={handleSubmit}>\n            <fieldset>\n                <div>\n                    <label htmlFor=\"isbn\">isbn</label>\n                    <input onChange={handleChange} id=\"isbn\" name=\"isbn\" type=\"number\" value={newBook.isbn || \"\"} required />\n                </div>\n                <div>\n                    <label htmlFor=\"title\">title</label>\n                    <input onChange={handleChange} required id=\"title\" name=\"title\" type=\"text\" value={newBook.title} />\n                </div>\n            </fieldset>\n            <fieldset>\n                <div>\n                    <label htmlFor=\"subtitle\">subtitle</label>\n                    <input onChange={handleChange} required id=\"subtitle\" name=\"subtitle\" type=\"text\" value={newBook.subtitle} />\n                </div>\n                <div>\n                    <label htmlFor=\"author\">author</label>\n                    <input onChange={handleChange} required id=\"author\" name=\"author\" type=\"text\" value={newBook.author} />\n                </div>\n            </fieldset>\n            <fieldset>\n                <div>\n                    <label htmlFor=\"published\">published</label>\n                    <input onChange={handleChange} required id=\"published\" name=\"published\" type=\"datetime-local\" value={newBook.published} />\n                </div>\n                <div>\n                    <label htmlFor=\"publisher\">publisher</label>\n                    <input onChange={handleChange} required id=\"publisher\" name=\"publisher\" type=\"text\" value={newBook.publisher} />\n                </div>\n            </fieldset>\n            <fieldset>\n                <div>\n                    <label htmlFor=\"pages\">pages</label>\n                    <input onChange={handleChange} required id=\"pages\" name=\"pages\" type=\"number\" value={newBook.pages} />\n                </div>\n                <div>\n                    <label htmlFor=\"description\">description</label>\n                    <textarea onChange={handleChange} required id=\"description\" name=\"description\" value={newBook.description} />\n                </div>\n            </fieldset>\n            <fieldset>\n                <div>\n                    <label htmlFor=\"price\">price</label>\n                    <input onChange={handleChange} required id=\"price\" name=\"price\" type=\"number\" value={newBook.price} />\n                </div>\n                <div>\n                    <label htmlFor=\"website\">website</label>\n                    <input onChange={handleChange} required id=\"website\" name=\"website\" type=\"url\" value={newBook.website} />\n                </div>\n            </fieldset>\n            <fieldset>\n                <div>\n                    <label htmlFor=\"image\">image</label>\n                    <input type=\"file\" onChange={handleChange} required id=\"image\" name=\"image\" />\n                </div>\n            </fieldset>\n            <div>\n                <button type=\"submit\">Buch erstellen</button>\n            </div>\n\n            <ul>\n                {errors && Object.keys(errors).map(key => {\n                    return <li key={key}>\n                        {errors[key].map(error => <p key={error}>{error}</p>)}\n                    </li>\n                })}\n            </ul>\n        </form>\n\n    </div>\n}\n\nexport default AddBook;","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport BookListing from \"./Components/BookListing/BookListing\";\nimport Error from \"./Components/Error/Error\";\nimport BookDetail from './Components/BookDetail/BookDetail';\nimport AddBook from './Components/AddBook/AddBook';\n\nexport default <Switch>\n    <Route path=\"/\" exact render={(props) => {\n        return <BookListing {...props} />\n    }} />}/>\n    <Route path=\"/details/:id\" exact render={(props) => {\n        return <BookDetail {...props} />\n    }} />}/>\n    <Route path=\"/admin/addBook\" exact render={(props) => {\n        return <AddBook {...props} />\n    }} />}/>\n    <Route path=\"*\" render={(props) => <Error {...props} />} />\n</Switch>\n","import React, { useState, useEffect } from \"react\";\nimport Navigation from \"./Components/Navigation/Navigation\";\nimport Loading from \"./Components/Loading/Loading\";\nimport Cart from \"./Components/Cart/Cart\";\nimport axios from \"axios\";\nimport config from \"./config/config.default\"\nimport routes from \"./routes\"\n\nexport const AppContext = React.createContext({});\n\n// ContextProvider & ContextConsumer\n\nconst App = () => {\n    const [books, setBooks] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [cart, updateCart] = useState([]);\n    const [isDrawerOpened, setIsDrawerOpen] = useState(false);\n\n    useEffect(() => {\n        axios.get(config.API_URL + \"/api/books\")\n            .then((response) => {\n                const books = response.data;\n                setBooks(books);\n            })\n            .catch((e) => console.error(e))\n            .finally(() => {\n                setLoading(false);\n            });\n    }, [])\n\n    const addItemToCart = (book) => {\n        updateCart([...cart, book]);\n    };\n\n    const removeItemFromCart = (index) => {\n\n        // kopie erstellen\n        const copiedCart = [...cart];\n\n        // lösche item aus dem cart - (Array).splice\n        copiedCart.splice(index, 1);\n\n        // setze neuen state mit neuem array ohne dem item mit dem index\n        updateCart(copiedCart);\n\n    };\n\n    const toggleDrawer = () => {\n        setIsDrawerOpen(!isDrawerOpened);\n    };\n\n    const getGeneratedClass = defaultClass => {\n        const className = [defaultClass];\n\n        if (isDrawerOpened) {\n            className.push(\"drawer-opened\");\n        } else {\n            className.push(\"drawer-closed\");\n        }\n\n        return className.join(\" \");\n    };\n\n    return <div>\n\n        <AppContext.Provider value={{\n            // isDrawerOpened: isDrawerOpened\n            // =\n            isDrawerOpened,\n            books,\n            cart: cart,\n            addItemToCart,\n            removeItemFromCart,\n            toggleDrawer\n        }}>\n\n            <Navigation/>\n\n            <Loading loading={loading} />\n\n            <div className={getGeneratedClass(\"main-wrapper\")}>\n                <div className='main-col-wrapper'>\n                    <div className='content-wrapper'>\n                        {!loading && routes}\n                    </div>\n                </div>\n            </div>\n            <div className={getGeneratedClass(\"drawer-wrapper\")}>\n                <Cart/>\n            </div>\n\n        </AppContext.Provider>\n    </div>;\n};\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <Router>\n        <App />\n    </Router>\n    , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}